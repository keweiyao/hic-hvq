#!/usr/bin/env python3

import numpy as np
import h5py
import subprocess
import sys
import os
import event
from ast import literal_eval as eva

def main():
    # parse config file
    if len(sys.argv) == 4:
        with open(sys.argv[3], 'r') as f:
            config = dict( (i.strip() for i in l.split('=', maxsplit=1)) for l in f if l[0] != '#')
    else:
        config = {}

    print(config)

    pkgname = os.environ['pkgname']
    dynamic_config = {  'type'	  : 'dynamic', 
                        'hydrofile' : sys.argv[1]	}

    if config.get('hvq-mode', 'LBT'):
        print (config.get('c32', False))
        hvq_config = {  'physics'   : 'LBT',
                        '2->2'    : eva(config.get('c22', 'True')),
                        '2->3'    : eva(config.get('c23', 'False')),
                        '3->2'    : eva(config.get('c32', 'False')),
                        'Nf'	: 3,
                        'mass'    : float(config.get('mass', 1.3)),
                        'Kfactor' : float(config.get('K', 1.0)),
                        'lambda_rescale' : float(config.get('Lambda', 1.0)) }  
    else:
        hvq_config = {  'physics'   : 'LGV',
                         'dt_lrf'   : float(config.get('dt-lrf', 0.1)),
                         'elastic'  : eva(config.get('elastic-lgv', True)),
                         'Einstein' : eva(config.get('ER', True)),
                         'Nf'       : 3,
                         'mass'     : float(config.get('mass', 1.3)) } 

    init_config =  { 'type'  : 'A+B',
                     'sample power'  : 1.,
                     'pTmin'         : 0.1,
                     'pTmax'         : 70.,
                     'ymin'          : float(config.get('ymin', -1.)),
                     'ymax'          : float(config.get('ymax', 1.)),
                     'TAB'           : h5py.File(sys.argv[2])['TAB_0'].value.T,
                     'dxy'           : 0.1   }
		
    e1 = event.event(   medium_flags=dynamic_config , 
                        physics_flags=hvq_config,
			Tc=float(config.get('Tc', 0.154)),
                        table_folder="{}/share/hvq/tables/".format(pkgname)   )

    e1.initialize_HQ(   NQ=int(config.get('N-hvq', 50000)),
                        init_flags=init_config   )

    # Run Model
    for i in range(500):
        print ("t = %1.2f [fm/c]"%e1.sys_time())
        status = e1.perform_hydro_step()
        if not status:
            break
    e1.output_oscar('./hvq-final.dat')

	
    # hadronization
    os.environ["ftn20"] = "./h-meson-final.dat"
    os.environ["ftn30"] = "./{}/share/hvq-hadronization/parameters_hd.dat".format(pkgname)
    os.environ["ftn40"] = "./{}/share/hvq-hadronization/recomb_c.dat".format(pkgname)
    subprocess.run("hvq-hadronization", stdin=open('./hvq-final.dat'))

if __name__ == "__main__":
    main()
