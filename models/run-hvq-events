import numpy as np
import h5py
import subprocess
import sys
import os
import event

def main():
	pkgname = os.environ['pkgname']
	dynamic_config = {  'type'	  : 'dynamic', 
						'hydrofile' : sys.argv[1]	}


	LBT_config = {  'physics'   : 'LBT',
					'2->2'    : True,
					'2->3'    : False,
					'3->2'    : False,
					'Nf'	: 3,
					'mass'    : 1.3,
					'Kfactor' : 1.0,
					'lambda_rescale' : 1.0 }  

	LGV_config = {  'physics'   : 'LGV',
					'dt_lrf'	: 0.02,
					'elastic'   : True,
					'Einstein'  : False,
					'Nf'	: 3,
					'mass'    : 1.3 } 

	TAA = h5py.File(sys.argv[2])['TAB_0'].value.T
	realistic_init =  { 'type'		  : 'A+B',
						'sample power'  : 1.,
						'pTmin'		 : 0.1,
						'pTmax'		 : 70.,
						'ymin'		  : -1.,
						'ymax'		  : 1.,
						'TAB'		   : TAA,
						'dxy'		   : 0.1   }
		
	e1 = event.event(   medium_flags=dynamic_config , 
						physics_flags=LBT_config   )

	e1.initialize_HQ(   NQ=10000,
						init_flags=realistic_init   )

	# Run Model
	for i in range(500):
		print ("t = %1.2f [fm/c]"%e1.sys_time())
		status = e1.perform_hydro_step()
		if not status:
			break
	e1.output_oscar('./hvq-final.dat')

	
	# hadronization
	os.environ["ftn20"] = "./h-meson-final.dat"
	os.environ["ftn30"] = "./{}/share/hvq-hadronization/parameters_hd.dat".format(pkgname)
	os.environ["ftn40"] = "./{}/share/hvq-hadronization/recomb_c.dat".format(pkgname)
	subprocess.run("hvq-hadronization", stdin=open('./hvq-final.dat'))
if __name__ == "__main__":
    main()
