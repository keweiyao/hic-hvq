#!/bin/bash

export CFLAGS='-ffast-math'
export FFLAGS=$CFLAGS
export CXXFLAGS=$CFLAGS

# extra preparation when compiling on OSG submit hosts
load_osg(){
  # load lmod
  source /cvmfs/oasis.opensciencegrid.org/osg/modules/lmod/current/init/bash

  # load necessary modules:
  #  - recent version of gcc, for c++11 among other things
  #  - recent version of cmake
  #  - boost for c++ codes
  #  - hdf5 for trento
  #  - python and packages
  module purge
  module load gcc/6.2.0 cmake boost/1.62.0-cxx11 gsl/2.3 python/3.5.2 all-pkgs libicu/4.2.1
  module load hdf5/1.8.20-cxx11
  module list

  # explicitl set the standard environment variables CPATH and LIBRARY_PATH
  # set corresponding variables for cmake
  export CMAKE_INCLUDE_PATH=$CPATH
  export CMAKE_LIBRARY_PATH=$LIBRARY_PATH

  # set compiler flags
  export CFLAGS="-march=x86-64 -mtune=intel -ffast-math"
  export FFLAGS="$CFLAGS"
  export CXXFLAGS="$CFLAGS"
  # set fortran compiler to override cmake default
  export FC='gfortran'

  # set linker flags to prefer the module versions of libraries to the system versions
  # the linker reads $LIBRARY_PATH but gives it lower priority than the standard paths
  # this uses -L flags to give $LIBRARY_PATH higher priority
  export LDFLAGS="-L${LIBRARY_PATH//:/ -L}"
}

if [[ $(hostname) =~ opensciencegrid.org|osgconnect.net ]]; then
  load_osg
fi

# read optional argument destdir (where to place package file)
# default is the current directory
destdir=${1-.}

# create a temporary directory for installing files
installdir=$(mktemp --directory)
# and ensure it's cleaned on exit
trap "rm -rf $installdir" EXIT

pkgname='hic-hvq'
pkgdir="$installdir/$pkgname"

# build each model
for i in models/*/; do
  pushd $i
  
  if [[ $(basename $i) == "osu-hydro" ]] && [[ $(hostname) =~ opensciencegrid.org|osgconnect.net ]]; then
    module unload gcc
    FC=/cvmfs/oasis.opensciencegrid.org/osg/modules/hdf5/1.8.13/bin/h5fc
    FFLAGS='-march=x86-64 -ffast-math'
  fi
  # determine whether to build with CMake or python
  if [[ -f install-pythia ]]; then
    ./install-pythia $pkgdir 
  elif [[ -f CMakeLists.txt ]]; then
    # create build directory and run cmake if necessary
    if [[ -d build ]]; then
      cd build
    else
      mkdir build && cd build
      cmake \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=/ \
        .. || exit 1
    fi
    # compile and install to the temporary directory
    make --jobs=$(nproc) DESTDIR=$pkgdir install || exit 1
  elif [[ -f setup.py ]]; then
    # install python packages
    python3 setup.py install \
      --no-compile \
      --root=$pkgdir \
      --prefix= \
      || exit 1

    # let python find packages in the temporary directory -- this is necessary
    # because generating the eos table for vishnew requires frzout (note frzout
    # installs first because it's alphabetically ahead)
    export PYTHONPATH=$PYTHONPATH:"$(echo $pkgdir/lib*/python*/site-packages)"
  else
    echo "unknown build system for model $i"
    exit 1
  fi

  if [[ $(basename $i) == "osu-hydro" ]] && [[ $(hostname) =~ opensciencegrid.org|osgconnect.net ]]; then
     load_osg
  fi


  popd
done

# install the event runner script
install -v models/run-* $pkgdir/bin

# create tgz for distributing to each job
tar --verbose --create --gzip --file $destdir/$pkgname.tar.gz \
  --directory $installdir $pkgname
